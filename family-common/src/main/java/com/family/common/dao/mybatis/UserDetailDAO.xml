<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.family.common.dao.UserDetailDAO" >
  <resultMap id="BaseResultMap" type="com.family.common.model.UserDetail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="BIGINT" />
    <result column="birthplace" property="birthplace" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="contribution" property="contribution" jdbcType="INTEGER" />
    <result column="zibei" property="zibei" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="constellation" property="constellation" jdbcType="INTEGER" />
    <result column="industry" property="industry" jdbcType="VARCHAR" />
    <result column="jobField" property="jobField" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="workplace" property="workplace" jdbcType="VARCHAR" />
    <result column="hangOut" property="hangOut" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="ranking" property="ranking" jdbcType="VARCHAR" />
    <result column="ancestral" property="ancestral" jdbcType="VARCHAR" />
  </resultMap>
  <cache flushInterval="1800000" size="1024" readOnly="true" eviction="LRU"></cache>
  <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="condition.gender != null" >
         and gender = #{condition.gender}
      </if>
    </trim>
  </sql>
  
  <sql id="Example_Order_Clause">
  	<trim prefix="order by" prefixOverrides="," >
  		<if test="orderMap.id != null">
  			,id #{orderMap.id}
  		</if>
  	</trim>
  </sql>
  
  <sql id="Base_Column_List" >
    id, gender, birthday, birthplace, credit, contribution, zibei, balance, avatar, constellation, industry, jobField, company, workplace, hangOut, tel, ranking, ancestral
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.lfy.base.model.Criteria" >
    select
    <include refid="Base_Column_List" />
    from 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Order_Clause" />
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_detail where id = #{id}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_detail where id = #{id}
  </delete>
  
  <insert id="insert" parameterType="com.family.common.model.UserDetail" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_detail (gender, birthday, birthplace, credit, contribution, zibei, balance, avatar, constellation, industry, jobField, company, workplace, hangOut, tel, ranking, ancestral)
    values (#{gender}, #{birthday}, #{birthplace}, #{credit}, #{contribution}, #{zibei}, #{balance}, #{avatar}, #{constellation}, #{industry}, #{jobField}, #{company}, #{workplace}, #{hangOut}, #{tel}, #{ranking}, #{ancestral})
  </insert>
  
  <select id="countByExample" parameterType="cn.lfy.base.model.Criteria" resultType="java.lang.Integer" >
    select count(*) from user_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.family.common.model.UserDetail" >
    update user_detail
    <set >
      <if test="gender != null" >
        gender = #{gender},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday},
      </if>
      <if test="birthplace != null" >
        birthplace = #{birthplace},
      </if>
      <if test="credit != null" >
        credit = #{credit},
      </if>
      <if test="contribution != null" >
        contribution = #{contribution},
      </if>
      <if test="balance != null" >
        balance = #{balance},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar},
      </if>
      <if test="constellation != null" >
        constellation = #{constellation},
      </if>
      <if test="constellation != null" >
        constellation = #{constellation},
      </if>
      <if test="industry != null" >
        industry = #{industry},
      </if>
      <if test="jobField != null" >
        jobField = #{jobField},
      </if>
      <if test="company != null" >
        company = #{company},
      </if>
      <if test="workplace != null" >
        workplace = #{workplace},
      </if>
      <if test="hangOut != null" >
        hangOut = #{hangOut},
      </if>
      <if test="tel != null" >
        tel = #{tel},
      </if>
      <if test="ranking != null" >
        ranking = #{ranking},
      </if>
      <if test="tel != null" >
        ancestral = #{ancestral},
      </if>
    </set>
    where id = #{id}
  </update>
  
</mapper>